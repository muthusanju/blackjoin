"use strict";
// Descriptive error types for common issues which may arise
// during the operation of BitGoJS or BitGoExpress
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
// Each subclass needs the explicit Object.setPrototypeOf() so that instanceof will work correctly.
// See https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
var BitGoJsError = /** @class */ (function (_super) {
    __extends(BitGoJsError, _super);
    function BitGoJsError(message) {
        var _this = _super.call(this, message) || this;
        if (typeof Error.captureStackTrace === 'function') {
            Error.captureStackTrace(_this, _this.constructor);
        }
        Object.setPrototypeOf(_this, BitGoJsError.prototype);
        return _this;
    }
    return BitGoJsError;
}(Error));
exports.BitGoJsError = BitGoJsError;
var TlsConfigurationError = /** @class */ (function (_super) {
    __extends(TlsConfigurationError, _super);
    function TlsConfigurationError(message) {
        var _this = _super.call(this, message || 'TLS is configuration is invalid') || this;
        Object.setPrototypeOf(_this, TlsConfigurationError.prototype);
        return _this;
    }
    return TlsConfigurationError;
}(BitGoJsError));
exports.TlsConfigurationError = TlsConfigurationError;
var NodeEnvironmentError = /** @class */ (function (_super) {
    __extends(NodeEnvironmentError, _super);
    function NodeEnvironmentError(message) {
        var _this = _super.call(this, message || 'NODE_ENV is invalid for the current bitgo environment') || this;
        Object.setPrototypeOf(_this, NodeEnvironmentError.prototype);
        return _this;
    }
    return NodeEnvironmentError;
}(BitGoJsError));
exports.NodeEnvironmentError = NodeEnvironmentError;
var UnsupportedCoinError = /** @class */ (function (_super) {
    __extends(UnsupportedCoinError, _super);
    function UnsupportedCoinError(coin) {
        var _this = _super.call(this, "Coin or token type " + coin + " not supported or not compiled") || this;
        Object.setPrototypeOf(_this, UnsupportedCoinError.prototype);
        return _this;
    }
    return UnsupportedCoinError;
}(BitGoJsError));
exports.UnsupportedCoinError = UnsupportedCoinError;
var AddressTypeChainMismatchError = /** @class */ (function (_super) {
    __extends(AddressTypeChainMismatchError, _super);
    function AddressTypeChainMismatchError(addressType, chain) {
        var _this = _super.call(this, "address type " + addressType + " does not correspond to chain " + chain) || this;
        Object.setPrototypeOf(_this, AddressTypeChainMismatchError.prototype);
        return _this;
    }
    return AddressTypeChainMismatchError;
}(BitGoJsError));
exports.AddressTypeChainMismatchError = AddressTypeChainMismatchError;
var P2shP2wshUnsupportedError = /** @class */ (function (_super) {
    __extends(P2shP2wshUnsupportedError, _super);
    function P2shP2wshUnsupportedError(message) {
        var _this = _super.call(this, message || 'p2shP2wsh not supported by this coin') || this;
        Object.setPrototypeOf(_this, P2shP2wshUnsupportedError.prototype);
        return _this;
    }
    return P2shP2wshUnsupportedError;
}(BitGoJsError));
exports.P2shP2wshUnsupportedError = P2shP2wshUnsupportedError;
var P2wshUnsupportedError = /** @class */ (function (_super) {
    __extends(P2wshUnsupportedError, _super);
    function P2wshUnsupportedError(message) {
        var _this = _super.call(this, message || 'p2wsh not supported by this coin') || this;
        Object.setPrototypeOf(_this, P2wshUnsupportedError.prototype);
        return _this;
    }
    return P2wshUnsupportedError;
}(BitGoJsError));
exports.P2wshUnsupportedError = P2wshUnsupportedError;
var UnsupportedAddressTypeError = /** @class */ (function (_super) {
    __extends(UnsupportedAddressTypeError, _super);
    function UnsupportedAddressTypeError(message) {
        var _this = _super.call(this, message || 'invalid address type') || this;
        Object.setPrototypeOf(_this, UnsupportedAddressTypeError.prototype);
        return _this;
    }
    return UnsupportedAddressTypeError;
}(BitGoJsError));
exports.UnsupportedAddressTypeError = UnsupportedAddressTypeError;
var InvalidAddressError = /** @class */ (function (_super) {
    __extends(InvalidAddressError, _super);
    function InvalidAddressError(message) {
        var _this = _super.call(this, message || 'invalid address') || this;
        Object.setPrototypeOf(_this, InvalidAddressError.prototype);
        return _this;
    }
    return InvalidAddressError;
}(BitGoJsError));
exports.InvalidAddressError = InvalidAddressError;
var InvalidAddressVerificationObjectPropertyError = /** @class */ (function (_super) {
    __extends(InvalidAddressVerificationObjectPropertyError, _super);
    function InvalidAddressVerificationObjectPropertyError(message) {
        var _this = _super.call(this, message || 'address validation failure') || this;
        Object.setPrototypeOf(_this, InvalidAddressVerificationObjectPropertyError.prototype);
        return _this;
    }
    return InvalidAddressVerificationObjectPropertyError;
}(BitGoJsError));
exports.InvalidAddressVerificationObjectPropertyError = InvalidAddressVerificationObjectPropertyError;
var UnexpectedAddressError = /** @class */ (function (_super) {
    __extends(UnexpectedAddressError, _super);
    function UnexpectedAddressError(message) {
        var _this = _super.call(this, message || 'address validation failure') || this;
        Object.setPrototypeOf(_this, UnexpectedAddressError.prototype);
        return _this;
    }
    return UnexpectedAddressError;
}(BitGoJsError));
exports.UnexpectedAddressError = UnexpectedAddressError;
var InvalidAddressDerivationPropertyError = /** @class */ (function (_super) {
    __extends(InvalidAddressDerivationPropertyError, _super);
    function InvalidAddressDerivationPropertyError(message) {
        var _this = _super.call(this, message || 'address chain and/or index are invalid') || this;
        Object.setPrototypeOf(_this, InvalidAddressDerivationPropertyError.prototype);
        return _this;
    }
    return InvalidAddressDerivationPropertyError;
}(BitGoJsError));
exports.InvalidAddressDerivationPropertyError = InvalidAddressDerivationPropertyError;
var WalletRecoveryUnsupported = /** @class */ (function (_super) {
    __extends(WalletRecoveryUnsupported, _super);
    function WalletRecoveryUnsupported(message) {
        var _this = _super.call(this, message || 'wallet recovery is not supported by this coin') || this;
        Object.setPrototypeOf(_this, WalletRecoveryUnsupported.prototype);
        return _this;
    }
    return WalletRecoveryUnsupported;
}(BitGoJsError));
exports.WalletRecoveryUnsupported = WalletRecoveryUnsupported;
var MethodNotImplementedError = /** @class */ (function (_super) {
    __extends(MethodNotImplementedError, _super);
    function MethodNotImplementedError(message) {
        var _this = _super.call(this, message || 'method not implemented') || this;
        Object.setPrototypeOf(_this, MethodNotImplementedError.prototype);
        return _this;
    }
    return MethodNotImplementedError;
}(BitGoJsError));
exports.MethodNotImplementedError = MethodNotImplementedError;
var InvalidMemoIdError = /** @class */ (function (_super) {
    __extends(InvalidMemoIdError, _super);
    function InvalidMemoIdError(message) {
        var _this = _super.call(this, message || 'invalid memo id') || this;
        Object.setPrototypeOf(_this, InvalidMemoIdError.prototype);
        return _this;
    }
    return InvalidMemoIdError;
}(InvalidAddressError));
exports.InvalidMemoIdError = InvalidMemoIdError;
var KeyRecoveryServiceError = /** @class */ (function (_super) {
    __extends(KeyRecoveryServiceError, _super);
    function KeyRecoveryServiceError(message) {
        var _this = _super.call(this, message || 'key recovery service encountered an error') || this;
        Object.setPrototypeOf(_this, KeyRecoveryServiceError.prototype);
        return _this;
    }
    return KeyRecoveryServiceError;
}(BitGoJsError));
exports.KeyRecoveryServiceError = KeyRecoveryServiceError;
var AddressGenerationError = /** @class */ (function (_super) {
    __extends(AddressGenerationError, _super);
    function AddressGenerationError(message) {
        var _this = _super.call(this, message || 'address generation failed') || this;
        Object.setPrototypeOf(_this, AddressGenerationError.prototype);
        return _this;
    }
    return AddressGenerationError;
}(BitGoJsError));
exports.AddressGenerationError = AddressGenerationError;
var EthereumLibraryUnavailableError = /** @class */ (function (_super) {
    __extends(EthereumLibraryUnavailableError, _super);
    function EthereumLibraryUnavailableError(packageName) {
        var _this = _super.call(this, "Ethereum library required for operation is not available. Please install \"" + (packageName) + "\".") || this;
        Object.setPrototypeOf(_this, EthereumLibraryUnavailableError.prototype);
        return _this;
    }
    return EthereumLibraryUnavailableError;
}(BitGoJsError));
exports.EthereumLibraryUnavailableError = EthereumLibraryUnavailableError;
var StellarFederationUserNotFoundError = /** @class */ (function (_super) {
    __extends(StellarFederationUserNotFoundError, _super);
    function StellarFederationUserNotFoundError(message) {
        var _this = _super.call(this, message || 'account not found') || this;
        Object.setPrototypeOf(_this, StellarFederationUserNotFoundError.prototype);
        return _this;
    }
    return StellarFederationUserNotFoundError;
}(BitGoJsError));
exports.StellarFederationUserNotFoundError = StellarFederationUserNotFoundError;
//# sourceMappingURL=data:application/json;base64,