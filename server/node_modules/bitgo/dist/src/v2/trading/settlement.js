"use strict";
/**
 * @prettier
 * @hidden
 */
Object.defineProperty(exports, "__esModule", { value: true });
var affirmation_1 = require("./affirmation");
var SettlementStatus;
(function (SettlementStatus) {
    SettlementStatus["CANCELED"] = "canceled";
    SettlementStatus["PENDING"] = "pending";
    SettlementStatus["REJECTED"] = "rejected";
    SettlementStatus["SETTLED"] = "settled";
    SettlementStatus["FAILED"] = "failed";
})(SettlementStatus = exports.SettlementStatus || (exports.SettlementStatus = {}));
var Settlement = /** @class */ (function () {
    function Settlement(settlementData, bitgo, enterpriseId) {
        var _this = this;
        this.bitgo = bitgo;
        this.enterpriseId = enterpriseId;
        this.id = settlementData.id;
        this.requesterAccountId = settlementData.requesterAccountId;
        this.status = settlementData.status;
        this.affirmations = settlementData.affirmations.map(function (affirmation) { return new affirmation_1.Affirmation(affirmation, _this.bitgo, _this.enterpriseId); });
        this.createdAt = new Date(settlementData.createdAt);
        this.expireAt = new Date(settlementData.expireAt);
        this.settledAt = new Date(settlementData.settledAt);
        this.trades = settlementData.trades;
    }
    return Settlement;
}());
exports.Settlement = Settlement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dGxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92Mi90cmFkaW5nL3NldHRsZW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7R0FHRzs7QUFNSCw2Q0FBNEM7QUFFNUMsSUFBWSxnQkFNWDtBQU5ELFdBQVksZ0JBQWdCO0lBQzFCLHlDQUFxQixDQUFBO0lBQ3JCLHVDQUFtQixDQUFBO0lBQ25CLHlDQUFxQixDQUFBO0lBQ3JCLHVDQUFtQixDQUFBO0lBQ25CLHFDQUFpQixDQUFBO0FBQ25CLENBQUMsRUFOVyxnQkFBZ0IsR0FBaEIsd0JBQWdCLEtBQWhCLHdCQUFnQixRQU0zQjtBQUVEO0lBYUUsb0JBQVksY0FBYyxFQUFFLEtBQUssRUFBRSxZQUFvQjtRQUF2RCxpQkFjQztRQWJDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ25CLElBQUksQ0FBQyxZQUFZLEdBQUcsWUFBWSxDQUFDO1FBRWpDLElBQUksQ0FBQyxFQUFFLEdBQUcsY0FBYyxDQUFDLEVBQUUsQ0FBQztRQUM1QixJQUFJLENBQUMsa0JBQWtCLEdBQUcsY0FBYyxDQUFDLGtCQUFrQixDQUFDO1FBQzVELElBQUksQ0FBQyxNQUFNLEdBQUcsY0FBYyxDQUFDLE1BQU0sQ0FBQztRQUNwQyxJQUFJLENBQUMsWUFBWSxHQUFHLGNBQWMsQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUNqRCxVQUFBLFdBQVcsSUFBSSxPQUFBLElBQUkseUJBQVcsQ0FBQyxXQUFXLEVBQUUsS0FBSSxDQUFDLEtBQUssRUFBRSxLQUFJLENBQUMsWUFBWSxDQUFDLEVBQTNELENBQTJELENBQzNFLENBQUM7UUFDRixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsTUFBTSxHQUFHLGNBQWMsQ0FBQyxNQUFpQixDQUFDO0lBQ2pELENBQUM7SUFDSCxpQkFBQztBQUFELENBQUMsQUE1QkQsSUE0QkM7QUE1QlksZ0NBQVUiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBwcmV0dGllclxuICogQGhpZGRlblxuICovXG5cbi8qKlxuICovXG5pbXBvcnQgeyBCaXRHbyB9IGZyb20gJy4uLy4uL2JpdGdvJztcbmltcG9ydCB7IFRyYWRlIH0gZnJvbSAnLi90cmFkZSc7XG5pbXBvcnQgeyBBZmZpcm1hdGlvbiB9IGZyb20gJy4vYWZmaXJtYXRpb24nO1xuXG5leHBvcnQgZW51bSBTZXR0bGVtZW50U3RhdHVzIHtcbiAgQ0FOQ0VMRUQgPSAnY2FuY2VsZWQnLFxuICBQRU5ESU5HID0gJ3BlbmRpbmcnLFxuICBSRUpFQ1RFRCA9ICdyZWplY3RlZCcsXG4gIFNFVFRMRUQgPSAnc2V0dGxlZCcsXG4gIEZBSUxFRCA9ICdmYWlsZWQnLFxufVxuXG5leHBvcnQgY2xhc3MgU2V0dGxlbWVudCB7XG4gIHByaXZhdGUgcmVhZG9ubHkgYml0Z286IEJpdEdvO1xuICBwcml2YXRlIHJlYWRvbmx5IGVudGVycHJpc2VJZDogc3RyaW5nO1xuXG4gIHB1YmxpYyBpZDogc3RyaW5nO1xuICBwdWJsaWMgcmVxdWVzdGVyQWNjb3VudElkOiBzdHJpbmc7XG4gIHB1YmxpYyBzdGF0dXM6IFNldHRsZW1lbnRTdGF0dXM7XG4gIHB1YmxpYyBhZmZpcm1hdGlvbnM6IEFmZmlybWF0aW9uW107XG4gIHB1YmxpYyBjcmVhdGVkQXQ6IERhdGU7XG4gIHB1YmxpYyBleHBpcmVBdDogRGF0ZTtcbiAgcHVibGljIHNldHRsZWRBdDogRGF0ZTtcbiAgcHVibGljIHRyYWRlczogVHJhZGVbXTtcblxuICBjb25zdHJ1Y3RvcihzZXR0bGVtZW50RGF0YSwgYml0Z28sIGVudGVycHJpc2VJZDogc3RyaW5nKSB7XG4gICAgdGhpcy5iaXRnbyA9IGJpdGdvO1xuICAgIHRoaXMuZW50ZXJwcmlzZUlkID0gZW50ZXJwcmlzZUlkO1xuXG4gICAgdGhpcy5pZCA9IHNldHRsZW1lbnREYXRhLmlkO1xuICAgIHRoaXMucmVxdWVzdGVyQWNjb3VudElkID0gc2V0dGxlbWVudERhdGEucmVxdWVzdGVyQWNjb3VudElkO1xuICAgIHRoaXMuc3RhdHVzID0gc2V0dGxlbWVudERhdGEuc3RhdHVzO1xuICAgIHRoaXMuYWZmaXJtYXRpb25zID0gc2V0dGxlbWVudERhdGEuYWZmaXJtYXRpb25zLm1hcChcbiAgICAgIGFmZmlybWF0aW9uID0+IG5ldyBBZmZpcm1hdGlvbihhZmZpcm1hdGlvbiwgdGhpcy5iaXRnbywgdGhpcy5lbnRlcnByaXNlSWQpXG4gICAgKTtcbiAgICB0aGlzLmNyZWF0ZWRBdCA9IG5ldyBEYXRlKHNldHRsZW1lbnREYXRhLmNyZWF0ZWRBdCk7XG4gICAgdGhpcy5leHBpcmVBdCA9IG5ldyBEYXRlKHNldHRsZW1lbnREYXRhLmV4cGlyZUF0KTtcbiAgICB0aGlzLnNldHRsZWRBdCA9IG5ldyBEYXRlKHNldHRsZW1lbnREYXRhLnNldHRsZWRBdCk7XG4gICAgdGhpcy50cmFkZXMgPSBzZXR0bGVtZW50RGF0YS50cmFkZXMgYXMgVHJhZGVbXTtcbiAgfVxufVxuIl19