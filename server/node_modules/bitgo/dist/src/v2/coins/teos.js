"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var eos_1 = require("./eos");
var common = require("../../common");
var Teos = /** @class */ (function (_super) {
    __extends(Teos, _super);
    function Teos() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Teos.createInstance = function (bitgo) {
        return new Teos(bitgo);
    };
    Teos.prototype.getChainId = function () {
        return 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473'; // testnet chain id
    };
    Teos.prototype.getChain = function () {
        return 'teos';
    };
    Teos.prototype.getFullName = function () {
        return 'Testnet EOS';
    };
    Teos.prototype.getPublicNodeUrls = function () {
        return common.Environments[this.bitgo.getEnv()].eosNodeUrls;
    };
    return Teos;
}(eos_1.Eos));
exports.Teos = Teos;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVvcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92Mi9jb2lucy90ZW9zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUVBLDZCQUE0QjtBQUM1QixxQ0FBdUM7QUFFdkM7SUFBMEIsd0JBQUc7SUFBN0I7O0lBb0JBLENBQUM7SUFuQlEsbUJBQWMsR0FBckIsVUFBc0IsS0FBWTtRQUNoQyxPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCx5QkFBVSxHQUFWO1FBQ0UsT0FBTyxrRUFBa0UsQ0FBQyxDQUFDLG1CQUFtQjtJQUNoRyxDQUFDO0lBRUQsdUJBQVEsR0FBUjtRQUNFLE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7SUFFRCwwQkFBVyxHQUFYO1FBQ0UsT0FBTyxhQUFhLENBQUM7SUFDdkIsQ0FBQztJQUVELGdDQUFpQixHQUFqQjtRQUNFLE9BQU8sTUFBTSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUMsV0FBVyxDQUFDO0lBQzlELENBQUM7SUFDSCxXQUFDO0FBQUQsQ0FBQyxBQXBCRCxDQUEwQixTQUFHLEdBb0I1QjtBQXBCWSxvQkFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJpdEdvIH0gZnJvbSAnLi4vLi4vYml0Z28nO1xuaW1wb3J0IHsgQmFzZUNvaW4gfSBmcm9tICcuLi9iYXNlQ29pbic7XG5pbXBvcnQgeyBFb3MgfSBmcm9tICcuL2Vvcyc7XG5pbXBvcnQgKiBhcyBjb21tb24gZnJvbSAnLi4vLi4vY29tbW9uJztcblxuZXhwb3J0IGNsYXNzIFRlb3MgZXh0ZW5kcyBFb3Mge1xuICBzdGF0aWMgY3JlYXRlSW5zdGFuY2UoYml0Z286IEJpdEdvKTogQmFzZUNvaW4ge1xuICAgIHJldHVybiBuZXcgVGVvcyhiaXRnbyk7XG4gIH1cblxuICBnZXRDaGFpbklkKCkge1xuICAgIHJldHVybiAnZTcwYWFhYjg5OTdlMWRmY2U1OGZiZmFjODBjYmJiOGZlY2VjN2I5OWNmOTgyYTk0NDQyNzNjYmM2NGM0MTQ3Myc7IC8vIHRlc3RuZXQgY2hhaW4gaWRcbiAgfVxuXG4gIGdldENoYWluKCkge1xuICAgIHJldHVybiAndGVvcyc7XG4gIH1cblxuICBnZXRGdWxsTmFtZSgpIHtcbiAgICByZXR1cm4gJ1Rlc3RuZXQgRU9TJztcbiAgfVxuXG4gIGdldFB1YmxpY05vZGVVcmxzKCk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gY29tbW9uLkVudmlyb25tZW50c1t0aGlzLmJpdGdvLmdldEVudigpXS5lb3NOb2RlVXJscztcbiAgfVxufVxuIl19