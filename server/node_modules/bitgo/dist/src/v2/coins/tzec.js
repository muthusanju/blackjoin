"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var zec_1 = require("./zec");
var bitGoUtxoLib = require("bitgo-utxo-lib");
var Tzec = /** @class */ (function (_super) {
    __extends(Tzec, _super);
    function Tzec(bitgo) {
        return _super.call(this, bitgo, bitGoUtxoLib.networks.zcashTest) || this;
    }
    Tzec.createInstance = function (bitgo) {
        return new Tzec(bitgo);
    };
    Tzec.prototype.getChain = function () {
        return 'tzec';
    };
    Tzec.prototype.getFullName = function () {
        return 'Testnet ZCash';
    };
    /**
     * Set up default parameters to send a Zcash Sapling compatible transaction
     * @param txBuilder
     * @returns {*}
     */
    Tzec.prototype.prepareTransactionBuilder = function (txBuilder) {
        txBuilder.setVersion(bitGoUtxoLib.Transaction.ZCASH_SAPLING_VERSION);
        txBuilder.setVersionGroupId(0x892f2085);
        return txBuilder;
    };
    return Tzec;
}(zec_1.Zec));
exports.Tzec = Tzec;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHplYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy92Mi9jb2lucy90emVjLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUVBLDZCQUFtRDtBQUNuRCw2Q0FBK0M7QUFFL0M7SUFBMEIsd0JBQUc7SUFDM0IsY0FBWSxLQUFZO2VBQ3RCLGtCQUFNLEtBQUssRUFBRSxZQUFZLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQztJQUMvQyxDQUFDO0lBRU0sbUJBQWMsR0FBckIsVUFBc0IsS0FBWTtRQUNoQyxPQUFPLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3pCLENBQUM7SUFFRCx1QkFBUSxHQUFSO1FBQ0UsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELDBCQUFXLEdBQVg7UUFDRSxPQUFPLGVBQWUsQ0FBQztJQUN6QixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILHdDQUF5QixHQUF6QixVQUEwQixTQUFnQztRQUN4RCxTQUFTLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxXQUFXLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUNyRSxTQUFTLENBQUMsaUJBQWlCLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDeEMsT0FBTyxTQUFTLENBQUM7SUFDbkIsQ0FBQztJQUNILFdBQUM7QUFBRCxDQUFDLEFBM0JELENBQTBCLFNBQUcsR0EyQjVCO0FBM0JZLG9CQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQml0R28gfSBmcm9tICcuLi8uLi9iaXRnbyc7XG5pbXBvcnQgeyBCYXNlQ29pbiB9IGZyb20gJy4uL2Jhc2VDb2luJztcbmltcG9ydCB7IFplYywgWmVjVHJhbnNhY3Rpb25CdWlsZGVyIH0gZnJvbSAnLi96ZWMnO1xuaW1wb3J0ICogYXMgYml0R29VdHhvTGliIGZyb20gJ2JpdGdvLXV0eG8tbGliJztcblxuZXhwb3J0IGNsYXNzIFR6ZWMgZXh0ZW5kcyBaZWMge1xuICBjb25zdHJ1Y3RvcihiaXRnbzogQml0R28pIHtcbiAgICBzdXBlcihiaXRnbywgYml0R29VdHhvTGliLm5ldHdvcmtzLnpjYXNoVGVzdCk7XG4gIH1cblxuICBzdGF0aWMgY3JlYXRlSW5zdGFuY2UoYml0Z286IEJpdEdvKTogQmFzZUNvaW4ge1xuICAgIHJldHVybiBuZXcgVHplYyhiaXRnbyk7XG4gIH1cblxuICBnZXRDaGFpbigpIHtcbiAgICByZXR1cm4gJ3R6ZWMnO1xuICB9XG5cbiAgZ2V0RnVsbE5hbWUoKSB7XG4gICAgcmV0dXJuICdUZXN0bmV0IFpDYXNoJztcbiAgfVxuXG4gIC8qKlxuICAgKiBTZXQgdXAgZGVmYXVsdCBwYXJhbWV0ZXJzIHRvIHNlbmQgYSBaY2FzaCBTYXBsaW5nIGNvbXBhdGlibGUgdHJhbnNhY3Rpb25cbiAgICogQHBhcmFtIHR4QnVpbGRlclxuICAgKiBAcmV0dXJucyB7Kn1cbiAgICovXG4gIHByZXBhcmVUcmFuc2FjdGlvbkJ1aWxkZXIodHhCdWlsZGVyOiBaZWNUcmFuc2FjdGlvbkJ1aWxkZXIpOiBhbnkge1xuICAgIHR4QnVpbGRlci5zZXRWZXJzaW9uKGJpdEdvVXR4b0xpYi5UcmFuc2FjdGlvbi5aQ0FTSF9TQVBMSU5HX1ZFUlNJT04pO1xuICAgIHR4QnVpbGRlci5zZXRWZXJzaW9uR3JvdXBJZCgweDg5MmYyMDg1KTtcbiAgICByZXR1cm4gdHhCdWlsZGVyO1xuICB9XG59XG4iXX0=