import { BitGo } from '../../bitgo';
import { BaseCoin } from '../baseCoin';
import { AbstractUtxoCoin, UtxoNetwork } from './abstractUtxoCoin';
import * as Bluebird from 'bluebird';
export interface TransactionInfo {
    transactionHex: string;
}
export declare class Btc extends AbstractUtxoCoin {
    constructor(bitgo: BitGo, network?: UtxoNetwork);
    static createInstance(bitgo: BitGo): BaseCoin;
    getChain(): string;
    getFamily(): string;
    getFullName(): string;
    supportsBlockTarget(): boolean;
    supportsP2shP2wsh(): boolean;
    supportsP2wsh(): boolean;
    getRecoveryFeePerBytes(): Bluebird<number>;
    getRecoveryFeeRecommendationApiBaseUrl(): Bluebird<string>;
    recoveryBlockchainExplorerUrl(url: string): string;
    getAddressInfoFromExplorer(addressBase58: string): Bluebird<any>;
    getUnspentInfoFromExplorer(addressBase58: string): Bluebird<any>;
    verifyRecoveryTransaction(txInfo: TransactionInfo): Bluebird<any>;
}
//# sourceMappingURL=btc.d.ts.map