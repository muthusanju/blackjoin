/**
 * @prettier
 * @hidden
 */
/**
 */
import * as Bluebird from 'bluebird';
import { BitGo } from '../../bitgo';
import { BaseCoin } from '../baseCoin';
/**
 * Internal function to centralize this route for wallet-scoped and enterprise-scoped queries
 * Params must contain either walletId or enterpriseId
 * @param params Id to query for pending transaction
 * @param baseCoin The coin object
 * @param bitgo The BitGo object
 * @returns result of the query
 */
export declare function getFirstPendingTransaction(params: {
    walletId?: string;
    enterpriseId?: string;
}, baseCoin: BaseCoin, bitgo: BitGo): Bluebird<any>;
/**
 * convert a 4 element Uint8Array to a 4 byte Number
 *
 * @param bytes
 * @return 4 byte number
 */
export declare function bytesToWord(bytes?: Uint8Array): number;
//# sourceMappingURL=internal.d.ts.map