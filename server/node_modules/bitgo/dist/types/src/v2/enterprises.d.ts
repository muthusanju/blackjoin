/**
 * @prettier
 */
import * as Bluebird from 'bluebird';
import { BitGo } from '../bitgo';
import { BaseCoin } from './baseCoin';
import { Enterprise } from './enterprise';
import { NodeCallback } from './types';
export interface GetEnterpriseOptions {
    id?: string;
}
export declare class Enterprises {
    private readonly bitgo;
    private readonly baseCoin;
    constructor(bitgo: BitGo, baseCoin: BaseCoin);
    /**
     * List all enterprises available to the current user
     * @param params unused
     * @param callback
     */
    list(params?: {}, callback?: NodeCallback<Enterprise[]>): Bluebird<Enterprise[]>;
    /**
     * Fetch an enterprise from BitGo
     * @param params
     * @param callback
     */
    get(params?: GetEnterpriseOptions, callback?: NodeCallback<Enterprise>): Bluebird<Enterprise>;
    /**
     * Create a new enterprise
     * @param params
     * @param callback
     */
    create(params?: any, callback?: NodeCallback<Enterprise>): Bluebird<Enterprise>;
}
//# sourceMappingURL=enterprises.d.ts.map