/**
 * @prettier
 * @hidden
 */
/**
 */
import * as Bluebird from 'bluebird';
import { BitGo } from '../../bitgo';
import { NodeCallback } from '../types';
import { TradingAccount } from './tradingAccount';
import { TradingPartner } from './tradingPartner';
interface TradingPartnerReferralParameters {
    institutionName: string;
    contactName: string;
    contactEmail: string;
    contactPhoneNumber: string;
    memo: string;
}
export declare class TradingPartners {
    private bitgo;
    private enterpriseId;
    private account;
    constructor(bitgo: BitGo, enterpriseId: string, account: TradingAccount);
    /**
     * List all trading partners of your trading account. Your trading partners are the accounts you are allowed to settle with.
     * @param callback
     */
    list(callback?: NodeCallback<TradingPartner[]>): Bluebird<TradingPartner[]>;
    /**
     * Refer a new trading partner to join the BitGo network and become your partner.
     * @param params
     * @param params.institutionName name of the institution to invite
     * @param params.contactName full name of a member of the institution to contact
     * @param params.contactEmail email address of the contact
     * @param params.contactPhoneNumber phone number of the contact
     * @param params.memo memo to send to the trading partner when sending the invite
     * @param callback
     */
    refer(params: TradingPartnerReferralParameters, callback?: NodeCallback<{}>): Bluebird<{}>;
}
export {};
//# sourceMappingURL=tradingPartners.d.ts.map