/**
 * @prettier
 * @hidden
 */
/**
 */
import * as Bluebird from 'bluebird';
import { BitGo } from '../../bitgo';
import { NodeCallback } from '../types';
import { TradingAccount } from './tradingAccount';
export declare enum TradingPartnerStatus {
    ACCEPTED = "accepted"
}
export declare class TradingPartner {
    private bitgo;
    private enterpriseId;
    private currentAccount;
    name: string;
    accountId: string;
    status: TradingPartnerStatus;
    constructor(tradingPartnerData: any, bitgo: BitGo, enterpriseId: string, currentAccount: TradingAccount);
    /**
     * Check if a trading partner has enough funds to cover the cost of a trade.
     * @param currency the currency to check
     * @param amount the amount of currency to check, represented in base units (such as cents, satoshi, or wei)
     * @param callback
     */
    checkBalance(currency: string, amount: string, callback?: NodeCallback<boolean>): Bluebird<boolean>;
}
//# sourceMappingURL=tradingPartner.d.ts.map