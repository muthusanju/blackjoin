/**
 * @hidden
 */
import * as bitcoin from 'bitgo-utxo-lib';
import { V1Network } from './v2/types';
export declare function getNetwork(network?: V1Network): bitcoin.Network;
export declare function makeRandomKey(): bitcoin.ECPair;
/**
 * Derive a BIP32 path, given a root key
 * We cache keys at each level of hierarchy we derive, to avoid re-deriving (approx 25ms per derivation)
 * @param rootKey key to derive off
 * @returns {*} function which can be used to derive a new HDNode from the root HDNode on a given path
 */
export declare function hdPath(rootKey: any): {
    derive: (path: string) => bitcoin.HDNode;
    deriveKey: (path: string) => bitcoin.ECPair;
};
//# sourceMappingURL=bitcoin.d.ts.map