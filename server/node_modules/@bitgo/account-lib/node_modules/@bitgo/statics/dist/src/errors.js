"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var BitGoStaticsError = /** @class */ (function (_super) {
    __extends(BitGoStaticsError, _super);
    function BitGoStaticsError(message) {
        var _this = _super.call(this, message) || this;
        _this.stack = new Error(message).stack;
        Object.setPrototypeOf(_this, BitGoStaticsError.prototype);
        return _this;
    }
    return BitGoStaticsError;
}(Error));
var CoinNotDefinedError = /** @class */ (function (_super) {
    __extends(CoinNotDefinedError, _super);
    function CoinNotDefinedError(coinName) {
        var _this = _super.call(this, "coin '" + coinName + "' is not defined") || this;
        Object.setPrototypeOf(_this, CoinNotDefinedError.prototype);
        return _this;
    }
    return CoinNotDefinedError;
}(BitGoStaticsError));
exports.CoinNotDefinedError = CoinNotDefinedError;
var DuplicateCoinDefinitionError = /** @class */ (function (_super) {
    __extends(DuplicateCoinDefinitionError, _super);
    function DuplicateCoinDefinitionError(coinName) {
        var _this = _super.call(this, "coin '" + coinName + "' is already defined") || this;
        Object.setPrototypeOf(_this, DuplicateCoinDefinitionError.prototype);
        return _this;
    }
    return DuplicateCoinDefinitionError;
}(BitGoStaticsError));
exports.DuplicateCoinDefinitionError = DuplicateCoinDefinitionError;
var DisallowedCoinFeatureError = /** @class */ (function (_super) {
    __extends(DisallowedCoinFeatureError, _super);
    function DisallowedCoinFeatureError(coinName, feature) {
        var _this = _super.call(this, "coin feature '" + feature + "' is disallowed for coin " + coinName + ".") || this;
        Object.setPrototypeOf(_this, DisallowedCoinFeatureError.prototype);
        return _this;
    }
    return DisallowedCoinFeatureError;
}(BitGoStaticsError));
exports.DisallowedCoinFeatureError = DisallowedCoinFeatureError;
var MissingRequiredCoinFeatureError = /** @class */ (function (_super) {
    __extends(MissingRequiredCoinFeatureError, _super);
    function MissingRequiredCoinFeatureError(coinName, missingFeatures) {
        var _this = _super.call(this, "Required coin feature(s) '" + missingFeatures.join(', ') + "' were not found for coin " + coinName + ".") || this;
        Object.setPrototypeOf(_this, MissingRequiredCoinFeatureError.prototype);
        return _this;
    }
    return MissingRequiredCoinFeatureError;
}(BitGoStaticsError));
exports.MissingRequiredCoinFeatureError = MissingRequiredCoinFeatureError;
var InvalidContractAddressError = /** @class */ (function (_super) {
    __extends(InvalidContractAddressError, _super);
    function InvalidContractAddressError(coinName, contractAddress) {
        var _this = _super.call(this, "invalid contract address '" + contractAddress + "' for coin '" + coinName + "'") || this;
        Object.setPrototypeOf(_this, InvalidContractAddressError.prototype);
        return _this;
    }
    return InvalidContractAddressError;
}(BitGoStaticsError));
exports.InvalidContractAddressError = InvalidContractAddressError;
var InvalidDomainError = /** @class */ (function (_super) {
    __extends(InvalidDomainError, _super);
    function InvalidDomainError(coinName, domain) {
        var _this = _super.call(this, "invalid domain '" + domain + "' for coin '" + coinName + "'") || this;
        Object.setPrototypeOf(_this, InvalidDomainError.prototype);
        return _this;
    }
    return InvalidDomainError;
}(BitGoStaticsError));
exports.InvalidDomainError = InvalidDomainError;
var ConflictingCoinFeaturesError = /** @class */ (function (_super) {
    __extends(ConflictingCoinFeaturesError, _super);
    function ConflictingCoinFeaturesError(coinName, conflictingFeatures) {
        var _this = _super.call(this, "coin feature(s) for coin '" + coinName + "' cannot be both required and disallowed: " + conflictingFeatures.join(', ')) || this;
        Object.setPrototypeOf(_this, ConflictingCoinFeaturesError.prototype);
        return _this;
    }
    return ConflictingCoinFeaturesError;
}(BitGoStaticsError));
exports.ConflictingCoinFeaturesError = ConflictingCoinFeaturesError;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFNQTtJQUFnQyxxQ0FBSztJQUNuQywyQkFBbUIsT0FBZTtRQUFsQyxZQUNFLGtCQUFNLE9BQU8sQ0FBQyxTQUdmO1FBRkMsS0FBSSxDQUFDLEtBQUssR0FBRyxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDdEMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFJLEVBQUUsaUJBQWlCLENBQUMsU0FBUyxDQUFDLENBQUM7O0lBQzNELENBQUM7SUFDSCx3QkFBQztBQUFELENBQUMsQUFORCxDQUFnQyxLQUFLLEdBTXBDO0FBRUQ7SUFBeUMsdUNBQWlCO0lBQ3hELDZCQUFtQixRQUFnQjtRQUFuQyxZQUNFLGtCQUFNLFdBQVMsUUFBUSxxQkFBa0IsQ0FBQyxTQUUzQztRQURDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSSxFQUFFLG1CQUFtQixDQUFDLFNBQVMsQ0FBQyxDQUFDOztJQUM3RCxDQUFDO0lBQ0gsMEJBQUM7QUFBRCxDQUFDLEFBTEQsQ0FBeUMsaUJBQWlCLEdBS3pEO0FBTFksa0RBQW1CO0FBT2hDO0lBQWtELGdEQUFpQjtJQUNqRSxzQ0FBbUIsUUFBZ0I7UUFBbkMsWUFDRSxrQkFBTSxXQUFTLFFBQVEseUJBQXNCLENBQUMsU0FFL0M7UUFEQyxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUksRUFBRSw0QkFBNEIsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7SUFDdEUsQ0FBQztJQUNILG1DQUFDO0FBQUQsQ0FBQyxBQUxELENBQWtELGlCQUFpQixHQUtsRTtBQUxZLG9FQUE0QjtBQU96QztJQUFnRCw4Q0FBaUI7SUFDL0Qsb0NBQW1CLFFBQWdCLEVBQUUsT0FBb0I7UUFBekQsWUFDRSxrQkFBTSxtQkFBaUIsT0FBTyxpQ0FBNEIsUUFBUSxNQUFHLENBQUMsU0FFdkU7UUFEQyxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUksRUFBRSwwQkFBMEIsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7SUFDcEUsQ0FBQztJQUNILGlDQUFDO0FBQUQsQ0FBQyxBQUxELENBQWdELGlCQUFpQixHQUtoRTtBQUxZLGdFQUEwQjtBQU92QztJQUFxRCxtREFBaUI7SUFDcEUseUNBQW1CLFFBQWdCLEVBQUUsZUFBOEI7UUFBbkUsWUFDRSxrQkFBTSwrQkFBNkIsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsa0NBQTZCLFFBQVEsTUFBRyxDQUFDLFNBRXZHO1FBREMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFJLEVBQUUsK0JBQStCLENBQUMsU0FBUyxDQUFDLENBQUM7O0lBQ3pFLENBQUM7SUFDSCxzQ0FBQztBQUFELENBQUMsQUFMRCxDQUFxRCxpQkFBaUIsR0FLckU7QUFMWSwwRUFBK0I7QUFPNUM7SUFBaUQsK0NBQWlCO0lBQ2hFLHFDQUFtQixRQUFnQixFQUFFLGVBQXVCO1FBQTVELFlBQ0Usa0JBQU0sK0JBQTZCLGVBQWUsb0JBQWUsUUFBUSxNQUFHLENBQUMsU0FFOUU7UUFEQyxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUksRUFBRSwyQkFBMkIsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7SUFDckUsQ0FBQztJQUNILGtDQUFDO0FBQUQsQ0FBQyxBQUxELENBQWlELGlCQUFpQixHQUtqRTtBQUxZLGtFQUEyQjtBQU94QztJQUF3QyxzQ0FBaUI7SUFDdkQsNEJBQW1CLFFBQWdCLEVBQUUsTUFBYztRQUFuRCxZQUNFLGtCQUFNLHFCQUFtQixNQUFNLG9CQUFlLFFBQVEsTUFBRyxDQUFDLFNBRTNEO1FBREMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFJLEVBQUUsa0JBQWtCLENBQUMsU0FBUyxDQUFDLENBQUM7O0lBQzVELENBQUM7SUFDSCx5QkFBQztBQUFELENBQUMsQUFMRCxDQUF3QyxpQkFBaUIsR0FLeEQ7QUFMWSxnREFBa0I7QUFPL0I7SUFBa0QsZ0RBQWlCO0lBQ2pFLHNDQUFtQixRQUFnQixFQUFFLG1CQUFrQztRQUF2RSxZQUNFLGtCQUNFLCtCQUE2QixRQUFRLGtEQUE2QyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFHLENBQ25ILFNBRUY7UUFEQyxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUksRUFBRSw0QkFBNEIsQ0FBQyxTQUFTLENBQUMsQ0FBQzs7SUFDdEUsQ0FBQztJQUNILG1DQUFDO0FBQUQsQ0FBQyxBQVBELENBQWtELGlCQUFpQixHQU9sRTtBQVBZLG9FQUE0QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRWFjaCBzdWJjbGFzcyBuZWVkcyB0aGUgZXhwbGljaXQgT2JqZWN0LnNldFByb3RvdHlwZU9mKCkgc28gdGhhdCBpbnN0YW5jZW9mIHdpbGwgd29yayBjb3JyZWN0bHkuXG4gKiBTZWUgaHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9UeXBlU2NyaXB0LXdpa2kvYmxvYi9tYXN0ZXIvQnJlYWtpbmctQ2hhbmdlcy5tZCNleHRlbmRpbmctYnVpbHQtaW5zLWxpa2UtZXJyb3ItYXJyYXktYW5kLW1hcC1tYXktbm8tbG9uZ2VyLXdvcmtcbiAqL1xuaW1wb3J0IHsgQ29pbkZlYXR1cmUgfSBmcm9tICcuL2Jhc2UnO1xuXG5jbGFzcyBCaXRHb1N0YXRpY3NFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgIHRoaXMuc3RhY2sgPSBuZXcgRXJyb3IobWVzc2FnZSkuc3RhY2s7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIEJpdEdvU3RhdGljc0Vycm9yLnByb3RvdHlwZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENvaW5Ob3REZWZpbmVkRXJyb3IgZXh0ZW5kcyBCaXRHb1N0YXRpY3NFcnJvciB7XG4gIHB1YmxpYyBjb25zdHJ1Y3Rvcihjb2luTmFtZTogc3RyaW5nKSB7XG4gICAgc3VwZXIoYGNvaW4gJyR7Y29pbk5hbWV9JyBpcyBub3QgZGVmaW5lZGApO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBDb2luTm90RGVmaW5lZEVycm9yLnByb3RvdHlwZSk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIER1cGxpY2F0ZUNvaW5EZWZpbml0aW9uRXJyb3IgZXh0ZW5kcyBCaXRHb1N0YXRpY3NFcnJvciB7XG4gIHB1YmxpYyBjb25zdHJ1Y3Rvcihjb2luTmFtZTogc3RyaW5nKSB7XG4gICAgc3VwZXIoYGNvaW4gJyR7Y29pbk5hbWV9JyBpcyBhbHJlYWR5IGRlZmluZWRgKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgRHVwbGljYXRlQ29pbkRlZmluaXRpb25FcnJvci5wcm90b3R5cGUpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBEaXNhbGxvd2VkQ29pbkZlYXR1cmVFcnJvciBleHRlbmRzIEJpdEdvU3RhdGljc0Vycm9yIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKGNvaW5OYW1lOiBzdHJpbmcsIGZlYXR1cmU6IENvaW5GZWF0dXJlKSB7XG4gICAgc3VwZXIoYGNvaW4gZmVhdHVyZSAnJHtmZWF0dXJlfScgaXMgZGlzYWxsb3dlZCBmb3IgY29pbiAke2NvaW5OYW1lfS5gKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgRGlzYWxsb3dlZENvaW5GZWF0dXJlRXJyb3IucHJvdG90eXBlKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTWlzc2luZ1JlcXVpcmVkQ29pbkZlYXR1cmVFcnJvciBleHRlbmRzIEJpdEdvU3RhdGljc0Vycm9yIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKGNvaW5OYW1lOiBzdHJpbmcsIG1pc3NpbmdGZWF0dXJlczogQ29pbkZlYXR1cmVbXSkge1xuICAgIHN1cGVyKGBSZXF1aXJlZCBjb2luIGZlYXR1cmUocykgJyR7bWlzc2luZ0ZlYXR1cmVzLmpvaW4oJywgJyl9JyB3ZXJlIG5vdCBmb3VuZCBmb3IgY29pbiAke2NvaW5OYW1lfS5gKTtcbiAgICBPYmplY3Quc2V0UHJvdG90eXBlT2YodGhpcywgTWlzc2luZ1JlcXVpcmVkQ29pbkZlYXR1cmVFcnJvci5wcm90b3R5cGUpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBJbnZhbGlkQ29udHJhY3RBZGRyZXNzRXJyb3IgZXh0ZW5kcyBCaXRHb1N0YXRpY3NFcnJvciB7XG4gIHB1YmxpYyBjb25zdHJ1Y3Rvcihjb2luTmFtZTogc3RyaW5nLCBjb250cmFjdEFkZHJlc3M6IHN0cmluZykge1xuICAgIHN1cGVyKGBpbnZhbGlkIGNvbnRyYWN0IGFkZHJlc3MgJyR7Y29udHJhY3RBZGRyZXNzfScgZm9yIGNvaW4gJyR7Y29pbk5hbWV9J2ApO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBJbnZhbGlkQ29udHJhY3RBZGRyZXNzRXJyb3IucHJvdG90eXBlKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgSW52YWxpZERvbWFpbkVycm9yIGV4dGVuZHMgQml0R29TdGF0aWNzRXJyb3Ige1xuICBwdWJsaWMgY29uc3RydWN0b3IoY29pbk5hbWU6IHN0cmluZywgZG9tYWluOiBzdHJpbmcpIHtcbiAgICBzdXBlcihgaW52YWxpZCBkb21haW4gJyR7ZG9tYWlufScgZm9yIGNvaW4gJyR7Y29pbk5hbWV9J2ApO1xuICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZih0aGlzLCBJbnZhbGlkRG9tYWluRXJyb3IucHJvdG90eXBlKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgQ29uZmxpY3RpbmdDb2luRmVhdHVyZXNFcnJvciBleHRlbmRzIEJpdEdvU3RhdGljc0Vycm9yIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKGNvaW5OYW1lOiBzdHJpbmcsIGNvbmZsaWN0aW5nRmVhdHVyZXM6IENvaW5GZWF0dXJlW10pIHtcbiAgICBzdXBlcihcbiAgICAgIGBjb2luIGZlYXR1cmUocykgZm9yIGNvaW4gJyR7Y29pbk5hbWV9JyBjYW5ub3QgYmUgYm90aCByZXF1aXJlZCBhbmQgZGlzYWxsb3dlZDogJHtjb25mbGljdGluZ0ZlYXR1cmVzLmpvaW4oJywgJyl9YFxuICAgICk7XG4gICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKHRoaXMsIENvbmZsaWN0aW5nQ29pbkZlYXR1cmVzRXJyb3IucHJvdG90eXBlKTtcbiAgfVxufVxuIl19